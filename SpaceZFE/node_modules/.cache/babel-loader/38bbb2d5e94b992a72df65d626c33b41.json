{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25956469\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"outer\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"회원가입\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form\"\n};\nconst _hoisted_4 = {\n  class: \"innerform\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"이메일\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"인증번호 입력\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"비밀번호\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"비밀번호 확인\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"닉네임\", -1 /* HOISTED */));\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _createElementVNode(\"button\", {\n    class: \"certification\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.sendCerti && $setup.sendCerti(...args))\n  }, \" 인증번호 보내기 \"), _hoisted_6, _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    name: \"emailCerificate\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.emailCerti = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.emailCerti]]), _createElementVNode(\"button\", {\n    class: \"certification\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.checkCerti && $setup.checkCerti(...args))\n  }, _toDisplayString($setup.checkButton), 1 /* TEXT */), _hoisted_8, _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"password1\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.password = $event),\n    onChange: _cache[5] || (_cache[5] = (...args) => $setup.pwLengChek && $setup.pwLengChek(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.password]]), _createTextVNode(_toDisplayString($setup.pwlengthCheck) + \" \", 1 /* TEXT */), _hoisted_10, _hoisted_11, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    name: \"password2\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.pwCheck = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.pwCheck]]), _hoisted_12, _hoisted_13, _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    name: \"nickname\",\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $setup.nickname = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.nickname]]), _hoisted_14, _createTextVNode(\" \" + _toDisplayString($setup.err), 1 /* TEXT */), _createElementVNode(\"button\", {\n    class: \"insertOK\",\n    onClick: _cache[8] || (_cache[8] = (...args) => $setup.insertDone && $setup.insertDone(...args))\n  }, \"가입완료\")])])])]);\n}","map":{"version":3,"mappings":";;;EAGSA,KAAK,EAAC;AAAO;gEAChBC,oBAAa,YAAT,MAAI;;EACHD,KAAK,EAAC;AAAM;;EACVA,KAAK,EAAC;AAAW;gEACpBC,oBAAU,WAAP,KAAG;gEAKNA,oBAAM;gEACNA,oBAAc,WAAX,SAAO;gEAKVA,oBAAM;gEACNA,oBAAW,WAAR,MAAI;iEAOPA,oBAAM;iEACNA,oBAAc,WAAX,SAAO;iEAEVA,oBAAM;iEACNA,oBAAU,WAAP,KAAG;iEAENA,oBAAM;;;uBA9BdC,oBAoCM,cAnCJD,oBAkCM,OAlCNE,UAkCM,GAjCJC,UAAa,EACbH,oBA+BM,OA/BNI,UA+BM,GA9BJJ,oBA6BM,OA7BNK,UA6BM,GA5BJC,UAAU,kBACVN,oBAAmD;IAA5CO,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC,OAAO;+DAAUC,YAAK;iDAALA,YAAK,KAC/CT,oBAES;IAFDD,KAAK,EAAC,eAAe;IAAEW,OAAK,yCAAED,6CAAS;KAAE,YAEjD,GACAE,UAAM,EACNC,UAAc,kBACdZ,oBAAmE;IAA5DO,IAAI,EAAC,QAAQ;IAACC,IAAI,EAAC,iBAAiB;+DAAUC,iBAAU;iDAAVA,iBAAU,KAC/DT,oBAES;IAFDD,KAAK,EAAC,eAAe;IAAEW,OAAK,yCAAED,+CAAU;sBAC3CA,kBAAW,kBAEhBI,UAAM,EACNC,UAAW,kBACXd,oBAKE;IAJAO,IAAI,EAAC,UAAU;IACfC,IAAI,EAAC,WAAW;+DACPC,eAAQ;IAChBM,QAAM,yCAAEN,+CAAU;iEADVA,eAAQ,uCAEdA,oBAAa,IAAG,GACrB,4BAAM,EACNO,WAAc,kBACdhB,oBAA4D;IAArDO,IAAI,EAAC,UAAU;IAACC,IAAI,EAAC,WAAW;+DAAUC,cAAO;iDAAPA,cAAO,KACxDQ,WAAM,EACNC,WAAU,kBACVlB,oBAAuD;IAAhDO,IAAI,EAAC,KAAK;IAACC,IAAI,EAAC,UAAU;+DAAUC,eAAQ;iDAARA,eAAQ,KACnDU,WAAM,sBACN,oBAAGV,UAAG,kBACJT,oBAA0D;IAAlDD,KAAK,EAAC,UAAU;IAAEW,OAAK,yCAAED,+CAAU;KAAE,MAAI","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","type","name","$setup","onClick","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","onChange","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14"],"sourceRoot":"","sources":["C:\\Users\\qwe17\\golfzon\\vue_prac\\SpaceZFE-1\\SpaceZFE\\src\\components\\Insert.vue"],"sourcesContent":["// eslint-disable-next-line\r\n<template>\r\n  <div>\r\n    <div class=\"outer\">\r\n      <h2>회원가입</h2>\r\n      <div class=\"form\">\r\n        <div class=\"innerform\">\r\n          <p>이메일</p>\r\n          <input type=\"email\" name=\"email\" v-model=\"email\" />\r\n          <button class=\"certification\" @click=\"sendCerti\">\r\n            인증번호 보내기\r\n          </button>\r\n          <br />\r\n          <p>인증번호 입력</p>\r\n          <input type=\"number\" name=\"emailCerificate\" v-model=\"emailCerti\" />\r\n          <button class=\"certification\" @click=\"checkCerti\">\r\n            {{ checkButton }}\r\n          </button>\r\n          <br />\r\n          <p>비밀번호</p>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password1\"\r\n            v-model=\"password\"\r\n            @change=\"pwLengChek\"\r\n          />{{ pwlengthCheck }}\r\n          <br />\r\n          <p>비밀번호 확인</p>\r\n          <input type=\"password\" name=\"password2\" v-model=\"pwCheck\" />\r\n          <br />\r\n          <p>닉네임</p>\r\n          <input type=\"tel\" name=\"nickname\" v-model=\"nickname\" />\r\n          <br />\r\n          {{ err\r\n          }}<button class=\"insertOK\" @click=\"insertDone\">가입완료</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    const email = ref(\"\");\r\n    const emailCerti = ref(\"\");\r\n    const certiNum = ref(0);\r\n    const password = ref(\"\");\r\n    const pwCheck = ref(\"\");\r\n    const nickname = ref(\"\");\r\n    const checkButton = ref(\"인증\");\r\n    const err = ref(\"\");\r\n    const pwlengthCheck = ref(\"\");\r\n\r\n    const sendCerti = async () => {\r\n      const res = await axios\r\n        .post(\"http://localhost:8090/spaceZBE/member/mail\", {\r\n          receiver: email.value,\r\n        })\r\n        .then((res) => {\r\n          certiNum.value = JSON.parse(res.request.response).result;\r\n          console.log(certiNum.value);\r\n        });\r\n    };\r\n\r\n    const checkCerti = () => {\r\n      if (emailCerti.value === certiNum.value) {\r\n        checkButton.value = \"인증완료\";\r\n      } else {\r\n        checkButton.value = \"인증실패\";\r\n      }\r\n    };\r\n\r\n    const insertDone = () => {\r\n      if (password.value !== pwCheck.value) {\r\n        err.value = \"비밀번호 확인이 올바르지 않습니다 다시 확인해주세요\";\r\n      } else if (checkButton.value !== \"인증완료\") {\r\n        err.value = \"이메일 인증을 해주세요\";\r\n      } else if (!nickname.value) {\r\n        err.value = \"닉네임을 입력해주세요\";\r\n      } else if (\r\n        password.value === pwCheck.value &&\r\n        checkButton.value === \"인증완료\" &&\r\n        nickname.value\r\n      ) {\r\n        err.value = \"\";\r\n        insertOK();\r\n        router.push({\r\n          name: \"Home\",\r\n        });\r\n      }\r\n    };\r\n\r\n    const insertOK = () => {\r\n      axios.post(\"http://localhost:8090/spaceZBE/member/signUp\", {\r\n        membername: nickname.value,\r\n        email: email.value,\r\n        password: password.value,\r\n        authority: \"member\",\r\n      });\r\n    };\r\n\r\n    const pwLengChek = () => {\r\n      if (password.value.length < 8) {\r\n        pwlengthCheck.value = \"비밀번호는 8자 이상이여야합니다\";\r\n      } else {\r\n        pwlengthCheck.value = \"\";\r\n      }\r\n    };\r\n\r\n    return {\r\n      email,\r\n      emailCerti,\r\n      password,\r\n      pwCheck,\r\n      pwLengChek,\r\n      nickname,\r\n      insertOK,\r\n      sendCerti,\r\n      checkCerti,\r\n      certiNum,\r\n      checkButton,\r\n      insertDone,\r\n      err,\r\n      pwlengthCheck,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.outer {\r\n  right: 200px;\r\n  float: right;\r\n  position: absolute;\r\n}\r\n.form {\r\n  width: 600px;\r\n  height: 700px;\r\n  margin-top: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n}\r\n.innerform {\r\n  padding: 20px;\r\n}\r\ninput {\r\n  width: 300px;\r\n  height: 50px;\r\n}\r\np {\r\n  font-size: 25px;\r\n}\r\n.certification {\r\n  width: 150px;\r\n  height: 40px;\r\n  margin-left: 50px;\r\n  margin-right: 50px;\r\n  border-radius: 15px;\r\n  background: white;\r\n  opacity: 0.5;\r\n}\r\n.certification:hover {\r\n  opacity: 1;\r\n}\r\n.insertOK {\r\n  margin-left: 300px;\r\n  margin-top: 60px;\r\n  width: 250px;\r\n  height: 50px;\r\n  border-radius: 30px;\r\n  background-color: white;\r\n  border: white;\r\n  color: blue;\r\n  font-size: 30px;\r\n}\r\n.insertOK:hover {\r\n  background-color: blue;\r\n  border: blue;\r\n  color: white;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}