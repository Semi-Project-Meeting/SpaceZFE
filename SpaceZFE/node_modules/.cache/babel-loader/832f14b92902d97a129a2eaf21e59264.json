{"ast":null,"code":"import { createTextVNode as _createTextVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-f7af2618\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"loginform\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, [/*#__PURE__*/_createElementVNode(\"b\", null, [/*#__PURE__*/_createElementVNode(\"i\", null, \"logo\")]), /*#__PURE__*/_createTextVNode(\" 가 처음이신가요? \")], -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_Modal = _resolveComponent(\"Modal\");\n  return _openBlock(), _createBlock(_component_Modal, null, {\n    title: _withCtx(() => [_createTextVNode(\" 로그인 \")]),\n    body: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n      class: \"email\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.email = $event),\n      type: \"email\",\n      placeholder: \"이메일\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.email]]), _withDirectives(_createElementVNode(\"input\", {\n      class: \"password\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.pw = $event),\n      type: \"password\",\n      placeholder: \"비밀번호\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.pw]]), _createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"btn btn-secondary\",\n      onClick: _cache[2] || (_cache[2] = (...args) => $setup.login && $setup.login(...args))\n    }, \" 로그인 \"), _hoisted_2, _hoisted_3, _createVNode(_component_router_link, {\n      class: \"submit\",\n      to: {\n        name: 'insert'\n      },\n      onClick: $setup.onClose\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" 회원가입 \")]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"mappings":";;;EAIWA,KAAK,EAAC;AAAW;gEAgBpBC,oBAEO,4BADLA,oBAAkB,yBAAfA,oBAAW,WAAR,MAAI,mCAAQ,aACpB;gEACAA,oBAAM;;;;;uBAtBZC,aA4BQC;IA3BWC,KAAK,WAAC,MAAK,kBAAL,OAAK;IACXC,IAAI,WACnB,MAuBM,CAvBNJ,oBAuBM,OAvBNK,UAuBM,mBAtBJL,oBAKE;MAJAD,KAAK,EAAC,OAAO;iEACJO,YAAK;MACdC,IAAI,EAAC,OAAO;MACZC,WAAW,EAAC;mDAFHF,YAAK,qBAIhBN,oBAKE;MAJAD,KAAK,EAAC,UAAU;iEACPO,SAAE;MACXC,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC;mDAFHF,SAAE,KAIbN,oBAES;MAFDO,IAAI,EAAC,QAAQ;MAACR,KAAK,EAAC,mBAAmB;MAAEU,OAAK,yCAAEH,qCAAK;OAAE,OAE/D,GACAI,UAEO,EACPC,UAAM,EACNC,aAEcC;MAFDd,KAAK,EAAC,QAAQ;MAAEe,EAAE,EAAE;QAAAC;MAAA,CAAkB;MAAGN,OAAK,EAAEH;;wBAAS,MAEtE,kBAFsE,QAEtE","names":["class","_createElementVNode","_createBlock","_component_Modal","title","body","_hoisted_1","$setup","type","placeholder","onClick","_hoisted_2","_hoisted_3","_createVNode","_component_router_link","to","name"],"sourceRoot":"","sources":["C:\\Users\\qwe17\\golfzon\\vue_prac\\SpaceZFE-1\\SpaceZFE\\src\\components\\LoginModal.vue"],"sourcesContent":["<template>\r\n  <Modal>\r\n    <template v-slot:title> 로그인 </template>\r\n    <template v-slot:body>\r\n      <div class=\"loginform\">\r\n        <input\r\n          class=\"email\"\r\n          v-model=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"이메일\"\r\n        />\r\n        <input\r\n          class=\"password\"\r\n          v-model=\"pw\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n        />\r\n        <button type=\"button\" class=\"btn btn-secondary\" @click=\"login\">\r\n          로그인\r\n        </button>\r\n        <span>\r\n          <b><i>logo</i></b> 가 처음이신가요?\r\n        </span>\r\n        <br />\r\n        <router-link class=\"submit\" :to=\"{ name: 'insert' }\" @click=\"onClose\">\r\n          회원가입\r\n        </router-link>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n</template>\r\n\r\n<script>\r\n// import { useRouter } from \"vue-router\";\r\nimport axios from \"axios\";\r\nimport Modal from \"@/components/Modal.vue\";\r\nimport { getCurrentInstance } from \"vue\";\r\nimport { ref, computed } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\n\r\nexport default {\r\n  components: {\r\n    Modal,\r\n  },\r\n  setup() {\r\n    const email = ref(\"\");\r\n    const pw = ref(\"\");\r\n\r\n    const store = useStore();\r\n\r\n    const memberId = ref(\"\");\r\n    const companyId = ref(\"\");\r\n    const authority = ref(\"\");\r\n\r\n    const login = async () => {\r\n      try {\r\n        const res = await axios\r\n          .post(\"http://localhost:8090/spaceZBE/member/login\", {\r\n            email: email.value,\r\n            password: pw.value,\r\n          })\r\n          .then((res) => {\r\n            store.commit(\r\n              \"GET_MEMBERID\",\r\n              JSON.parse(res.request.response).member_id\r\n            );\r\n            console.log(JSON.parse(res.request.response).member_id);\r\n            console.log(store.state.memberId);\r\n            localStorage.setItem(\r\n              \"memberId\",\r\n              JSON.parse(res.request.response).member_id\r\n            );\r\n            localStorage.setItem(\r\n              \"companyId\",\r\n              JSON.parse(res.request.response).company_id\r\n            );\r\n            localStorage.setItem(\r\n              \"authority\",\r\n              JSON.parse(res.request.response).authority\r\n            );\r\n            window.location.reload(true);\r\n            onClose();\r\n          });\r\n      } catch (error) {\r\n        console.log(\"error:\", error);\r\n      }\r\n    };\r\n\r\n    const { emit } = getCurrentInstance();\r\n    const onClose = () => {\r\n      emit(\"close\");\r\n    };\r\n    const onDelete = () => {\r\n      emit(\"delete\");\r\n    };\r\n\r\n    return {\r\n      onClose,\r\n      onDelete,\r\n      login,\r\n      email,\r\n      pw,\r\n      memberId,\r\n      companyId,\r\n      authority,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.btn-secondary {\r\n  background: blue;\r\n  width: 300px;\r\n  height: 70px;\r\n  font-size: 30px;\r\n  margin-top: 50px;\r\n  margin-bottom: 50px;\r\n  margin-left: 80px;\r\n  margin-right: 80px;\r\n  border-radius: 20px;\r\n}\r\nb {\r\n  color: blue;\r\n}\r\n.loginform {\r\n  align-items: center;\r\n  margin-top: 50px;\r\n}\r\n\r\ninput {\r\n  width: 400px;\r\n  height: 100px;\r\n  text-align: center;\r\n  font-size: 30px;\r\n  margin-left: 40px;\r\n  margin-right: 50px;\r\n  border: 1px solid white;\r\n  border-bottom: 1px solid gray;\r\n}\r\nspan {\r\n  text-align: center;\r\n  font-size: 30px;\r\n}\r\n.submit {\r\n  color: black;\r\n  font-size: 20px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}