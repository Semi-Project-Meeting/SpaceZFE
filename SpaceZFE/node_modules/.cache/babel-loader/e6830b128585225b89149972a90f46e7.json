{"ast":null,"code":"export default {\n  props: [\"options\"],\n  name: \"app\",\n  data() {\n    return {\n      map: null\n    };\n  },\n  mounted() {\n    this.initMap();\n    this.searchSubmit();\n  },\n  methods: {\n    initMap() {\n      let container = document.getElementById(\"map\");\n      let options = {\n        center: new kakao.maps.LatLng(37.566826, 126.9786567),\n        level: 3\n      };\n      let map = new kakao.maps.Map(container, options);\n      this.map = map;\n      this.geocoder = new kakao.maps.services.Geocoder();\n    },\n    searchSubmit() {\n      const {\n        location\n      } = this.options;\n      this.geocoder.addressSearch(location, (result, status) => {\n        if (status === kakao.maps.services.Status.OK) {\n          let bounds = new kakao.maps.LatLngBounds();\n          for (let i = 0; i < result.length; i++) {\n            let data = result[i];\n            bounds.extend(new kakao.maps.LatLng(data.y, data.x));\n            var marker = new kakao.maps.Marker({\n              map: this.map,\n              position: new kakao.maps.LatLng(data.y, data.x)\n            });\n          }\n          this.map.setBounds(bounds);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAOA,eAAe;EACbA,KAAK,EAAE,CAAC,SAAS,CAAC;EAClBC,IAAI,EAAE,KAAK;EACXC,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,YAAY,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACPF,OAAO,GAAG;MACR,IAAIG,SAAQ,GAAIC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MAC9C,IAAIC,OAAM,GAAI;QACZC,MAAM,EAAE,IAAIC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,WAAW,CAAC;QACrDC,KAAK,EAAE;MACT,CAAC;MAED,IAAIb,GAAE,GAAI,IAAIU,KAAK,CAACC,IAAI,CAACG,GAAG,CAACT,SAAS,EAAEG,OAAO,CAAC;MAEhD,IAAI,CAACR,GAAE,GAAIA,GAAG;MAEd,IAAI,CAACe,QAAO,GAAI,IAAIL,KAAK,CAACC,IAAI,CAACK,QAAQ,CAACC,QAAQ,EAAE;IACpD,CAAC;IACDd,YAAY,GAAG;MACb,MAAM;QAAEe;MAAS,IAAI,IAAI,CAACV,OAAO;MACjC,IAAI,CAACO,QAAQ,CAACI,aAAa,CAACD,QAAQ,EAAE,CAACE,MAAM,EAAEC,MAAM,KAAK;QACxD,IAAIA,MAAK,KAAMX,KAAK,CAACC,IAAI,CAACK,QAAQ,CAACM,MAAM,CAACC,EAAE,EAAE;UAC5C,IAAIC,MAAK,GAAI,IAAId,KAAK,CAACC,IAAI,CAACc,YAAY,EAAE;UAE1C,KAAK,IAAIC,IAAI,CAAC,EAAEA,IAAIN,MAAM,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;YACtC,IAAI3B,IAAG,GAAIqB,MAAM,CAACM,CAAC,CAAC;YACpBF,MAAM,CAACI,MAAM,CAAC,IAAIlB,KAAK,CAACC,IAAI,CAACC,MAAM,CAACb,IAAI,CAAC8B,CAAC,EAAE9B,IAAI,CAAC+B,CAAC,CAAC,CAAC;YACpD,IAAIC,MAAK,GAAI,IAAIrB,KAAK,CAACC,IAAI,CAACqB,MAAM,CAAC;cACjChC,GAAG,EAAE,IAAI,CAACA,GAAG;cACbiC,QAAQ,EAAE,IAAIvB,KAAK,CAACC,IAAI,CAACC,MAAM,CAACb,IAAI,CAAC8B,CAAC,EAAE9B,IAAI,CAAC+B,CAAC;YAChD,CAAC,CAAC;UACJ;UAEA,IAAI,CAAC9B,GAAG,CAACkC,SAAS,CAACV,MAAM,CAAC;QAC5B;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC","names":["props","name","data","map","mounted","initMap","searchSubmit","methods","container","document","getElementById","options","center","kakao","maps","LatLng","level","Map","geocoder","services","Geocoder","location","addressSearch","result","status","Status","OK","bounds","LatLngBounds","i","length","extend","y","x","marker","Marker","position","setBounds"],"sourceRoot":"","sources":["C:\\Users\\qwe17\\golfzon\\vue_prac\\SpaceZFE-1\\SpaceZFE\\src\\components\\KaKaoMapOne.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"options\"],\r\n  name: \"app\",\r\n  data() {\r\n    return {\r\n      map: null,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    this.searchSubmit();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      let container = document.getElementById(\"map\");\r\n      let options = {\r\n        center: new kakao.maps.LatLng(37.566826, 126.9786567),\r\n        level: 3,\r\n      };\r\n\r\n      let map = new kakao.maps.Map(container, options);\r\n\r\n      this.map = map;\r\n\r\n      this.geocoder = new kakao.maps.services.Geocoder();\r\n    },\r\n    searchSubmit() {\r\n      const { location } = this.options;\r\n      this.geocoder.addressSearch(location, (result, status) => {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          let bounds = new kakao.maps.LatLngBounds();\r\n\r\n          for (let i = 0; i < result.length; i++) {\r\n            let data = result[i];\r\n            bounds.extend(new kakao.maps.LatLng(data.y, data.x));\r\n            var marker = new kakao.maps.Marker({\r\n              map: this.map,\r\n              position: new kakao.maps.LatLng(data.y, data.x),\r\n            });\r\n          }\r\n\r\n          this.map.setBounds(bounds);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n#map {\r\n  width: 400px;\r\n  height: 400px;\r\n  top: 20px;\r\n  left: 170px;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}