{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\nexport default {\n  setup() {\n    const router = useRouter();\n    const email = ref(\"\");\n    const emailCerti = ref(\"\");\n    const certiNum = ref(0);\n    const password = ref(\"\");\n    const pwCheck = ref(\"\");\n    const nickname = ref(\"\");\n    const checkButton = ref(\"인증\");\n    const err = ref(\"\");\n    const pwlengthCheck = ref(\"\");\n    const sendCerti = async () => {\n      const res = await axios.post(\"http://localhost:8090/spaceZBE/member/mail\", {\n        receiver: email.value\n      }).then(res => {\n        certiNum.value = JSON.parse(res.request.response).result;\n        console.log(certiNum.value);\n      });\n    };\n    const checkCerti = () => {\n      if (emailCerti.value === certiNum.value) {\n        checkButton.value = \"인증완료\";\n      } else {\n        checkButton.value = \"인증실패\";\n      }\n    };\n    const insertDone = () => {\n      if (password.value !== pwCheck.value) {\n        err.value = \"비밀번호 확인이 올바르지 않습니다 다시 확인해주세요\";\n      } else if (checkButton.value !== \"인증완료\") {\n        err.value = \"이메일 인증을 해주세요\";\n      } else if (!nickname.value) {\n        err.value = \"닉네임을 입력해주세요\";\n      } else if (password.value === pwCheck.value && checkButton.value === \"인증완료\" && nickname.value) {\n        err.value = \"\";\n        insertOK();\n        router.push({\n          name: \"Home\"\n        });\n      }\n    };\n    const insertOK = () => {\n      axios.post(\"http://localhost:8090/spaceZBE/member/signUp\", {\n        membername: nickname.value,\n        email: email.value,\n        password: password.value,\n        authority: \"member\"\n      });\n    };\n    const pwLengChek = () => {\n      if (password.value.length < 8) {\n        pwlengthCheck.value = \"비밀번호는 8자 이상이여야합니다\";\n      } else {\n        pwlengthCheck.value = \"\";\n      }\n    };\n    return {\n      email,\n      emailCerti,\n      password,\n      pwCheck,\n      pwLengChek,\n      nickname,\n      insertOK,\n      sendCerti,\n      checkCerti,\n      certiNum,\n      checkButton,\n      insertDone,\n      err,\n      pwlengthCheck\n    };\n  }\n};","map":{"version":3,"mappings":"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","names":["axios","ref","useRouter","setup","router","email","emailCerti","certiNum","password","pwCheck","nickname","checkButton","err","pwlengthCheck","sendCerti","res","post","receiver","value","then","JSON","parse","request","response","result","console","log","checkCerti","insertDone","insertOK","push","name","membername","authority","pwLengChek","length"],"sourceRoot":"","sources":["C:\\Users\\qwe17\\golfzon\\vue_prac\\SpaceZFE-1\\SpaceZFE\\src\\components\\Insert.vue"],"sourcesContent":["// eslint-disable-next-line\r\n<template>\r\n  <div>\r\n    <div class=\"outer\">\r\n      <h2>회원가입</h2>\r\n      <div class=\"form\">\r\n        <div class=\"innerform\">\r\n          <p>이메일</p>\r\n          <input type=\"email\" name=\"email\" v-model=\"email\" />\r\n          <button class=\"certification\" @click=\"sendCerti\">\r\n            인증번호 보내기\r\n          </button>\r\n          <br />\r\n          <p>인증번호 입력</p>\r\n          <input type=\"number\" name=\"emailCerificate\" v-model=\"emailCerti\" />\r\n          <button class=\"certification\" @click=\"checkCerti\">\r\n            {{ checkButton }}\r\n          </button>\r\n          <br />\r\n          <p>비밀번호</p>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password1\"\r\n            v-model=\"password\"\r\n            @change=\"pwLengChek\"\r\n          />{{ pwlengthCheck }}\r\n          <br />\r\n          <p>비밀번호 확인</p>\r\n          <input type=\"password\" name=\"password2\" v-model=\"pwCheck\" />\r\n          <br />\r\n          <p>닉네임</p>\r\n          <input type=\"tel\" name=\"nickname\" v-model=\"nickname\" />\r\n          <br />\r\n          {{ err\r\n          }}<button class=\"insertOK\" @click=\"insertDone\">가입완료</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport default {\r\n  setup() {\r\n    const router = useRouter();\r\n    const email = ref(\"\");\r\n    const emailCerti = ref(\"\");\r\n    const certiNum = ref(0);\r\n    const password = ref(\"\");\r\n    const pwCheck = ref(\"\");\r\n    const nickname = ref(\"\");\r\n    const checkButton = ref(\"인증\");\r\n    const err = ref(\"\");\r\n    const pwlengthCheck = ref(\"\");\r\n\r\n    const sendCerti = async () => {\r\n      const res = await axios\r\n        .post(\"http://localhost:8090/spaceZBE/member/mail\", {\r\n          receiver: email.value,\r\n        })\r\n        .then((res) => {\r\n          certiNum.value = JSON.parse(res.request.response).result;\r\n          console.log(certiNum.value);\r\n        });\r\n    };\r\n\r\n    const checkCerti = () => {\r\n      if (emailCerti.value === certiNum.value) {\r\n        checkButton.value = \"인증완료\";\r\n      } else {\r\n        checkButton.value = \"인증실패\";\r\n      }\r\n    };\r\n\r\n    const insertDone = () => {\r\n      if (password.value !== pwCheck.value) {\r\n        err.value = \"비밀번호 확인이 올바르지 않습니다 다시 확인해주세요\";\r\n      } else if (checkButton.value !== \"인증완료\") {\r\n        err.value = \"이메일 인증을 해주세요\";\r\n      } else if (!nickname.value) {\r\n        err.value = \"닉네임을 입력해주세요\";\r\n      } else if (\r\n        password.value === pwCheck.value &&\r\n        checkButton.value === \"인증완료\" &&\r\n        nickname.value\r\n      ) {\r\n        err.value = \"\";\r\n        insertOK();\r\n        router.push({\r\n          name: \"Home\",\r\n        });\r\n      }\r\n    };\r\n\r\n    const insertOK = () => {\r\n      axios.post(\"http://localhost:8090/spaceZBE/member/signUp\", {\r\n        membername: nickname.value,\r\n        email: email.value,\r\n        password: password.value,\r\n        authority: \"member\",\r\n      });\r\n    };\r\n\r\n    const pwLengChek = () => {\r\n      if (password.value.length < 8) {\r\n        pwlengthCheck.value = \"비밀번호는 8자 이상이여야합니다\";\r\n      } else {\r\n        pwlengthCheck.value = \"\";\r\n      }\r\n    };\r\n\r\n    return {\r\n      email,\r\n      emailCerti,\r\n      password,\r\n      pwCheck,\r\n      pwLengChek,\r\n      nickname,\r\n      insertOK,\r\n      sendCerti,\r\n      checkCerti,\r\n      certiNum,\r\n      checkButton,\r\n      insertDone,\r\n      err,\r\n      pwlengthCheck,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.outer {\r\n  right: 200px;\r\n  float: right;\r\n  position: absolute;\r\n}\r\n.form {\r\n  width: 600px;\r\n  height: 700px;\r\n  margin-top: 20px;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n}\r\n.innerform {\r\n  padding: 20px;\r\n}\r\ninput {\r\n  width: 300px;\r\n  height: 50px;\r\n}\r\np {\r\n  font-size: 25px;\r\n}\r\n.certification {\r\n  width: 150px;\r\n  height: 40px;\r\n  margin-left: 50px;\r\n  margin-right: 50px;\r\n  border-radius: 15px;\r\n  background: white;\r\n  opacity: 0.5;\r\n}\r\n.certification:hover {\r\n  opacity: 1;\r\n}\r\n.insertOK {\r\n  margin-left: 300px;\r\n  margin-top: 60px;\r\n  width: 250px;\r\n  height: 50px;\r\n  border-radius: 30px;\r\n  background-color: white;\r\n  border: white;\r\n  color: blue;\r\n  font-size: 30px;\r\n}\r\n.insertOK:hover {\r\n  background-color: blue;\r\n  border: blue;\r\n  color: white;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}